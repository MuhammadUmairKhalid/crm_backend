# Generated by Django 5.1.4 on 2024-12-16 21:04

import dashboard.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('bonus_formula', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('superuser', 'Super User'), ('admin', 'Admin'), ('agent', 'Agent'), ('validator', 'Validator'), ('account', 'Account')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('birth_state', models.CharField(max_length=26, null=True)),
                ('phone_number', models.CharField(max_length=11)),
                ('name', models.CharField(max_length=26)),
                ('gender', models.CharField(choices=dashboard.models.Gender.choices, default='male', max_length=26)),
                ('address', models.CharField(max_length=26, null=True)),
                ('dob', models.DateField(null=True)),
                ('age', models.IntegerField(null=True)),
                ('height', models.CharField(max_length=26, null=True)),
                ('weight', models.CharField(max_length=26, null=True)),
                ('insurance_company', models.CharField(choices=dashboard.models.InsuranceCompany.choices, default='Mutual of Omaha', max_length=26, null=True)),
                ('type_of_coverage', models.CharField(choices=dashboard.models.InsuranceType.choices, default='Modified', max_length=26, null=True)),
                ('coverage_amount', models.CharField(max_length=26, null=True)),
                ('monthly_premium', models.CharField(max_length=26, null=True)),
                ('social_security_number', models.CharField(max_length=26)),
                ('beneficary', models.CharField(max_length=26, null=True)),
                ('tobacco', models.CharField(choices=dashboard.models.SmokerType.choices, default='smoker', max_length=26, null=True)),
                ('health_condition', models.CharField(max_length=26, null=True)),
                ('medication', models.CharField(max_length=26, null=True)),
                ('doctors_name_and_address', models.CharField(max_length=26, null=True)),
                ('bank_name', models.CharField(max_length=26, null=True)),
                ('account_type', models.CharField(choices=dashboard.models.AccountType.choices, default='Savings Account', max_length=26, null=True)),
                ('routing_number', models.CharField(max_length=26, null=True)),
                ('account_number', models.CharField(max_length=26, null=True)),
                ('initial_draft_date', models.DateField(null=True)),
                ('future_draft_date', models.CharField(choices=dashboard.models.ScheduleOption.choices, default='1st of each month', max_length=26, null=True)),
                ('email', models.CharField(max_length=26)),
                ('comments', models.CharField(max_length=26, null=True)),
                ('jornaya_lead_id', models.CharField(max_length=26, null=True)),
                ('closers_name', models.CharField(max_length=26, null=True)),
                ('agent', models.ForeignKey(limit_choices_to={'role': 'agent'}, on_delete=django.db.models.deletion.CASCADE, related_name='forms', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.company')),
                ('validator', models.ForeignKey(blank=True, limit_choices_to={'role': 'validator'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_forms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
