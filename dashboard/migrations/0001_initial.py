# Generated by Django 5.1.4 on 2024-12-12 17:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('Not Approved', 'Not Approved')], max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('policy_number', models.CharField(blank=True, max_length=50, null=True)),
                ('submission_status', models.CharField(choices=[('Submitted', 'Submitted'), ('Submit Later', 'Submit Later')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_eft', models.DateField()),
                ('eft_schedule', models.CharField(choices=[('1st of the Month', '1st of the Month'), ('3rd of the Month', '3rd of the Month'), ('2nd Wednesday', '2nd Wednesday'), ('3rd Wednesday', '3rd Wednesday'), ('4th Wednesday', '4th Wednesday'), ('Other', 'Other')], max_length=50)),
                ('ssn', models.CharField(max_length=11)),
                ('beneficiary_name', models.CharField(max_length=100)),
                ('beneficiary_relation', models.CharField(choices=[('Mother', 'Mother'), ('Father', 'Father'), ('Brother', 'Brother'), ('Child', 'Child'), ('Grandchild', 'Grandchild'), ('Friend', 'Friend'), ('State', 'State')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Agent', 'Agent'), ('Validator', 'Validator'), ('Admin', 'Admin'), ('PaymentChecker', 'Payment Checker'), ('Retentions', 'Retentions'), ('hr', 'hr')], max_length=20)),
                ('password', models.CharField(max_length=8)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_on_account', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('Checking', 'Checking'), ('Saving', 'Saving')], max_length=20)),
                ('bank_name', models.CharField(max_length=100)),
                ('routing_number', models.CharField(max_length=9)),
                ('checking_number', models.CharField(max_length=20)),
                ('account_info_source', models.CharField(choices=[('Cheque Book', 'Cheque Book'), ('Bank Statement', 'Bank Statement'), ('Bank Rep', 'Bank Rep'), ('Online Application', 'Online Application')], max_length=50)),
                ('payment_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.paymentinfo')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_status', models.CharField(choices=[('Paid', 'Paid'), ('Not Paid', 'Not Paid')], max_length=20)),
                ('payment_issue', models.CharField(blank=True, choices=[('NSF', 'NSF'), ('Invalid Account', 'Invalid Account'), ('Closed', 'Closed'), ('Frozen', 'Frozen'), ('Non-Transactional', 'Non-Transactional'), ('Lapsed', 'Lapsed'), ('Cancelled', 'Cancelled'), ('Declined', 'Declined')], max_length=50, null=True)),
                ('application_status', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.applicationstatus')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('dob', models.DateField()),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('income_status', models.CharField(choices=[('Disability', 'Disability'), ('Retirement', 'Retirement'), ('Employment', 'Employment'), ('SelfEmployed', 'Self Employed')], max_length=50)),
                ('smoker', models.BooleanField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='paymentinfo',
            name='personal_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.personalinfo'),
        ),
        migrations.CreateModel(
            name='MedicalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.TextField()),
                ('medications', models.TextField()),
                ('personal_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.personalinfo')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carrier', models.CharField(choices=[('AFLAC', 'AFLAC'), ('SBLI', 'SBLI'), ('RNA', 'RNA'), ('Mutual of Omaha', 'Mutual of Omaha'), ('CiCa', 'CiCa')], max_length=100)),
                ('plan_type', models.CharField(choices=[('Level', 'Level'), ('Graded', 'Graded'), ('Modified', 'Modified'), ('Guaranteed Issue', 'Guaranteed Issue')], max_length=50)),
                ('coverage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('premium', models.DecimalField(decimal_places=2, max_digits=10)),
                ('personal_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.personalinfo')),
            ],
        ),
        migrations.CreateModel(
            name='ContactDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('state_born', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('personal_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.personalinfo')),
            ],
        ),
        migrations.AddField(
            model_name='applicationstatus',
            name='personal_info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.personalinfo'),
        ),
    ]
